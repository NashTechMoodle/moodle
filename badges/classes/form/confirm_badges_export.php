<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * External backpack form
 *
 * @package    core_badges
 * @copyright  2019 Damyon Wiese
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */

namespace core_badges\form;
defined('MOODLE_INTERNAL') || die();

require_once($CFG->libdir.'/formslib.php');

/**
 * Backpack form class.
 *
 * @package    core_badges
 * @copyright  2019 Damyon Wiese
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
class confirm_badges_export extends \moodleform {

    /**
     * Create the form.
     */
    public function definition() {
        global $PAGE;

        $mform = $this->_form;
        $userbadges = $this->_customdata['userbadges'];
        $backpack = false;
        if (isset($this->_customdata['externalbackpack'])) {
            $backpack = $this->_customdata['externalbackpack'];
        } else {
            throw new \coding_exception('backpack is required.');
        }
        $PAGE->requires->css('/badges/style/backpack.css');
        $checkboxes = [];
        foreach ($userbadges as $badge) {
            $context = ($badge->type == BADGE_TYPE_SITE) ? \context_system::instance() : \context_course::instance($badge->courseid);
            $bname = $badge->name;
            $imageurl = \moodle_url::make_pluginfile_url($context->id, 'badges', 'badgeimage', $badge->id, '/', 'f1', false);
            $name = \html_writer::tag('span', $bname, array('class' => 'badge-name'));
            $image = \html_writer::empty_tag('img', array('src' => $imageurl, 'class' => 'badge-image'));
            $checkboxes[] = $mform->createElement('advcheckbox', $badge->id, '', $image . $name, null,  array(0, $badge->uniquehash));
        }

        $mform->addGroup($checkboxes, 'confirmbadge');
        $mform->addRule('confirmbadge', null, 'required', null, 'client');

        // Disable short forms.
        $mform->setDisableShortforms();
        $this->add_action_buttons(true, get_string('submit'));
    }

    /**
     * Validate form.
     *
     * @param array $data
     * @param array $files
     * @return array
     * @throws \coding_exception
     */
    function validation($data, $files) {
        $validate = false;
        if(!empty($data['confirmbadge'])) {
            foreach ($data['confirmbadge'] as $selected) {
                if ($selected) {
                    $validate = true;
                }
            }
        }
        if (!$validate) {
            return ['confirmbadge' => get_string('confirmbadgesrequired', 'badges')];
        }
        return parent::validation($data, $files); // TODO: Change the autogenerated stub
    }
}
